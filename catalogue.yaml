- name: configuring catalogue component 
  hosts: catalogue 
  become: yes 
  tasks: 
  - name: disabling default nodejs # idi cheyyadaniki ansible lo module ledu. 
    ansible.builtin.command: dnf module disable nodejs -y 

  - name: enable nodejs:20 # idi cheyyadaniki ansible lo module ledu. 
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs 
    ansible.builtin.package: 
      name: nodejs 
      state: present 

  - name: create roboshop system user 
    ansible.builtin.user:  #user already create ayyi unte ansible will skip this.
      name: roboshop 
      shell: /sbin/nologin 
      home: /app 
      system: true 

  - name: create app directory 
    ansible.builtin.file: 
      path: /app 
      state: directory 

  - name: download catalogue code 
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip 
      dest: /tmp/catalogue.zip 

# this module thinks file exist on ansible control server, needs to extract onto remote machine(catalogue server).
# remote_src: yes ----> file already exist in catalogue server.
  - name: extract catalogue code 
    ansible.builtin.unarchive: 
      src: /tmp/catalogue.zip 
      dest: /app 
      remote_src: yes   

  - name: install dependencies 
    community.general.npm: 
      path: /app 

  - name: copy catalogue service to system directory 
    ansible.builtin.copy:
      src: catalogue.service 
      dest: /etc/systemd/system/catalogue.service 

  - name: systemctl daemon reload 
    ansible.builtin.systemd_service: 
      daemon_reload: true 

  - name: start and enable catalogue 
    ansible.builtin.service: 
      name: catalogue 
      state: started 
      enabled: yes 

  - name: copying mongo.repo file to a remote location 
    ansible.builtin.copy: 
      src: mongo.repo 
      dest: /etc/yum.repos.d/mongo.repo 

  - name: install mongodb client 
    ansible.builtin.dnf: 
      name: mongodb-mongosh 
      state: present 

  - name: products loaded or not 
    ansible.builtin.command: mongosh --host mongodb.deepthi.tech --eval 'db.getMongo().getDBNames().indexOf("catalogue")' 
    register: dataload_output 

  - name: print output 
    ansible.builtin.debug: 
      msg: "{{ dataload_output }}" 

  - name: load products 
    ansible.builtin.shell: mongosh --host mongodb.deepthi.tech </app/db/master-data.js
    when: dataload_output.stdout | int < 0  








